#ifndef __$__uommanager__bl
#define __$__uommanager__bl 1234
#include<iostream>
#include<bl/iuom>
#include<bl/uom>
using namespace inventory
{
using namespace business_layer
{
using namespace abc
{
class IUnitOfMeasurementManager
{
public:
virtual void addUnitOfMeasurement(abc::IUnitOfMeasurement *unitOfMeasurement) throw(BLException)=0;
virtual void updateUnitOfMeasurement(abc::IUnitOfMeasurement *unitOfMeasurement) throw(BLException)=0;
virtual void removeUnitOfMeasurementByCode(int code) throw(BLException)=0;
virtual void removeUnitOfMeasurementByTitle(string &title) throw(BLException)=0;
virtual IUnitOfMeasurement * getUnitOfMeasurementByCode(int code) throw(BLException)=0;
virtual IUnitOfMeasurement * getUnitOfMeasurementByTitle(string &title) throw(BLException)=0;
virtual forward_list<IUnitOfMeasurement *> * getUnitOfMeasurements() throw(BLException)=0;
virtual int unitOfMeasurementCodeExists(int code) throw(BLException)=0;
virtual int unitOfMeasurementTitleExists(string &title) throw(BLException)=0;
virtual int getUnitOfMeasurementCount() throw(BLException)=0;
};
}
}
}

#endif
